server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Thu thập logs từ Docker containers với proper service labeling
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      # Lấy container name
      - source_labels: ["__meta_docker_container_name"]
        regex: "/?(.*)"
        target_label: "container_name"

      # Lấy container ID (12 ký tự đầu)
      - source_labels: ["__meta_docker_container_id"]
        regex: "(.{12})"
        target_label: "container_id"

      # Lấy service name từ docker compose service label
      - source_labels:
          ["__meta_docker_container_label_com_docker_compose_service"]
        target_label: "service"

      # Lấy service name từ custom label service.name nếu có
      - source_labels: ["__meta_docker_container_label_service_name"]
        target_label: "service_name"
        regex: "(.+)"

      # Nếu không có service_name custom label, sử dụng compose service name
      - source_labels: ["service_name"]
        target_label: "service_name"
        regex: "^$"
        replacement: "${1}"
      - source_labels: ["service"]
        target_label: "service_name"
        regex: "(.+)"

    pipeline_stages:
      # Xử lý JSON logs từ Docker
      - json:
          expressions:
            output: log
            stream: stream
            timestamp: time

      # Parse Spring Boot logs format
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3})\s+(?P<level>\w+)\s+(?P<logger>\S+)\s+-\s+(?P<message>.*)'

      # Tạo labels từ parsed data
      - labels:
          level:
          logger:

      # Xử lý timestamp
      - timestamp:
          source: timestamp
          format: "2006-01-02 15:04:05.000"

      # Output final log message
      - output:
          source: output

  # File-based logs backup (chỉ cho trường hợp Docker logs không hoạt động)
  - job_name: file-logs-backup
    static_configs:
      - targets:
          - localhost
        labels:
          job: file-logs
          __path__: /logs/spring-petclinic/*.log
    pipeline_stages:
      # Xử lý multiline logs (Java stack traces)
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
          max_wait_time: 3s

      # Parse log format
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3})\s+(?P<level>\w+)\s+(?P<logger>\S+)\s+-\s+(?P<message>.*)'

      # Extract service name from filename
      - regex:
          source: filename
          expression: '/logs/spring-petclinic/(?P<service_name>.*?)(-\d+)?\.log'

      # Set labels
      - labels:
          level:
          logger:
          service_name:

      # Set timestamp
      - timestamp:
          source: timestamp
          format: "2006-01-02 15:04:05.000"
